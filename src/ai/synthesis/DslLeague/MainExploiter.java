/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ai.synthesis.DslLeague;

import ai.synthesis.grammar.dslTree.interfacesDSL.iDSL;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author rubens
 */
public class MainExploiter extends PlayerDSL{

    public MainExploiter(Payoff payoff, iDSL agent) {
        super(payoff, agent);
    }

    @Override
    public PlayerDSL get_match() {
        List<PlayerDSL> main_agents = new ArrayList<>();
        for (PlayerDSL player : payoff.getPlayers()) {
            if(player instanceof MainPlayer){
                main_agents.add(player);
            }
        }
        PlayerDSL opponent = main_agents.get(rand.nextInt(main_agents.size()));
        if(payoff.getItem(this, opponent).get(0) > 0.1){
            return opponent;
        }
        
        List<PlayerDSL> historical = new ArrayList<>();
        for (PlayerDSL player : payoff.getPlayers()) {
            if (player instanceof HistoricalDSL) {
                if (((HistoricalDSL) player).getParent() == opponent.agent) {
                    historical.add(player);
                }
            }
        }
        List<Double> win_rates = payoff.getItem(this, historical);
        return getRandomChoice(historical, win_rates, "variance");
    }

    @Override
    public boolean ready_to_checkpoint() {
        List<PlayerDSL> main_agents = new ArrayList<>();
        for (PlayerDSL player : payoff.getPlayers()) {
            if(player instanceof MainPlayer){
                main_agents.add(player);
            }
        }
        
        List<Double> win_rates = payoff.getItem(this, main_agents);
        return (Collections.min(win_rates) > 0.7);
    }
    
}
